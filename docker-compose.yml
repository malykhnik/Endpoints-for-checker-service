version: '3.8'

services:
#  REDIS
  redis-server:
    image: redis:7.4
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    container_name: redis-server
    ports:
      # нестандартный порт (стандартный - 6379)
      - "6389:6389"
    networks:
      - my_shared_network
      
#  ЭНДПОИНТЫ
  endpoint-without-sql:
    build:
      context: ./endpoint-without-db
      dockerfile: Dockerfile
    image: endpoint-without-db:latest
    container_name: endpoint-without-sql
    ports:
      - "3050:3050"
    networks:
      - my_shared_network
  endpoint-with-nosql:
    build:
      context: ./endpoint-with-nosql
      dockerfile: Dockerfile
    image: endpoint-with-nosql:latest
    container_name: endpoint-with-nosql
    ports:
      - "3090:3090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://endpoint-with-nosql-db:5432/db_for_nosql
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      endpoint-with-nosql-db:
        condition: service_healthy
      redis-server:
        condition: service_healthy
    networks:
      - my_shared_network
  endpoint-with-sql:
    build:
      context: ./endpoint-with-sql
      dockerfile: Dockerfile
    image: endpoint-with-sql:latest
    container_name: endpoint-with-sql
    ports:
      - "3080:3080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://endpoint-with-sql-db:5432/db_for_sql
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      endpoint-with-sql-db:
        condition: service_healthy
    networks:
      - my_shared_network

#  POSTGRES
  endpoint-with-nosql-db:
    image: postgres:16.1
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
    container_name: endpoint-with-nosql-db
    environment:
      POSTGRES_DB: db_for_nosql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5437:5432"
    networks:
      - my_shared_network
  endpoint-with-sql-db:
    image: postgres:16.1
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
    container_name: endpoint-with-sql-db
    environment:
      POSTGRES_DB: db_for_sql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5436:5432"
    networks:
      - my_shared_network

#  ЭКСОПРТЕРЫ ДЛЯ POSTGRES
  endpoint-with-sql-db-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: endpoint-with-sql-db-exporter
    environment:
      DATA_SOURCE_NAME: jdbc:postgresql://endpoint-with-sql-db:5432/db_for_sql
    ports:
      - "9187:9187"  # порт для экспорта метрик
    networks:
      - my_shared_network
  endpoint-with-nosql-db-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: endpoint-with-nosql-db-exporter
    environment:
      DATA_SOURCE_NAME: jdbc:postgresql://endpoint-with-nosql-db:5432/db_for_nosql
    ports:
      - "9188:9187"  # порт для экспорта метрик
    networks:
      - my_shared_network
#  REDIS EXPORTER
  redis-server-exporter:
    image: oliver006/redis_exporter
    container_name: redis-server-exporter
    ports:
      - "9121:9121"
    environment:
      REDIS_URL: "redis-server:6389"
    networks:
      - my_shared_network


networks:
  my_shared_network:
    external: true
